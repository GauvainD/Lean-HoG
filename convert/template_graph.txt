import ..graph
import ..tree_representation
import ..component

namespace hog

set_option class.instance_max_depth 5000
set_option eqn_compiler.max_steps 100000

def $name : simple_irreflexive_graph :=
  from_edge_list $vertex_size $edge_list


def ${name}_BST : BST Edge :=
{ tree := ${BST},
  is_bst := begin simp, bool_reflect end
}

def ${name}_from_BST : simple_irreflexive_graph := from_BST $vertex_size ${name}_BST

${connected_components_witness}

def ${name}_components_witness : number_of_connected_components := witness_components ${name}_witness


end hog