import ..graph
import ..connected_component
import ..tree_set
import ..tree_map

open tree_set
open tree_map

namespace hog

set_option class.instance_max_depth 5000
set_option eqn_compiler.max_steps 100000

def ${name}_stree : stree Edge (by { trivial } : bounded.bottom < bounded.top) :=
${stree}

def ${name}_tset : tset Edge := ${name}_stree

def ${name} : simple_irreflexive_graph := 
{ vertex_size := $vertex_size,
  edges := ${name}_tset,
  edge_size := $edge_size,
  edge_size_correct := by refl,
  neighborhoods := sorry
}

${connected_components_witness}

def ${name}_components_witness : number_of_connected_components := witness_components ${name}_witness


end hog